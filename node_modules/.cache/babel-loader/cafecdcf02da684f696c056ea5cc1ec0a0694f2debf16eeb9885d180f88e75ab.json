{"ast":null,"code":"import axios from'axios';const API_BASE_URL='https://fakestoreapi.com';const api=axios.create({baseURL:API_BASE_URL,timeout:10000});const transformProduct=product=>{const clothCategories={\"electronics\":\"Beverages\",\"jewelery\":\"Desserts\",\"men's clothing\":\"Main Course\",\"women's clothing\":\"Appetizers\"};return{id:product.id,title:product.title,price:Math.round(product.price*1.5),description:product.description,category:clothCategories[product.category]||\"Main Course\",image:product.image,rating:product.rating};};export const fetchProducts=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;try{const response=await api.get('/products',{params:{limit}});return response.data.map(transformProduct);}catch(error){console.error('Error fetching products:',error);throw new Error('Failed to fetch products');}};export const fetchProductById=async id=>{try{const response=await api.get(\"/products/\".concat(id));return transformProduct(response.data);}catch(error){console.error('Error fetching product:',error);throw new Error('Failed to fetch product');}};export const fetchCategories=async()=>{try{const response=await api.get('/products/categories');const clothCategories={\"electronics\":\"Beverages\",\"jewelery\":\"Desserts\",\"men's clothing\":\"Main Course\",\"women's clothing\":\"Appetizers\"};return response.data.map(cat=>clothCategories[cat]||cat);}catch(error){console.error('Error fetching categories:',error);return[\"Main Course\",\"Appetizers\",\"Desserts\",\"Beverages\"];}};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","transformProduct","product","clothCategories","id","title","price","Math","round","description","category","image","rating","fetchProducts","limit","arguments","length","undefined","response","get","params","data","map","error","console","Error","fetchProductById","concat","fetchCategories","cat"],"sources":["E:/Infinite-Locus/infinite-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'https://fakestoreapi.com';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n});\r\n\r\nconst transformProduct = (product) => {\r\n  const clothCategories = {\r\n    \"electronics\": \"Beverages\",\r\n    \"jewelery\": \"Desserts\", \r\n    \"men's clothing\": \"Main Course\",\r\n    \"women's clothing\": \"Appetizers\"\r\n  };\r\n\r\n  return {\r\n    id: product.id,\r\n    title: product.title,\r\n    price: Math.round(product.price * 1.5), \r\n    description: product.description,\r\n    category: clothCategories[product.category] || \"Main Course\",\r\n    image: product.image,\r\n    rating: product.rating\r\n  };\r\n};\r\n\r\nexport const fetchProducts = async (limit = 20) => {\r\n  try {\r\n    const response = await api.get('/products', {\r\n      params: { limit }\r\n    });\r\n    return response.data.map(transformProduct);\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    throw new Error('Failed to fetch products');\r\n  }\r\n};\r\n\r\nexport const fetchProductById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/products/${id}`);\r\n    return transformProduct(response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching product:', error);\r\n    throw new Error('Failed to fetch product');\r\n  }\r\n};\r\n\r\nexport const fetchCategories = async () => {\r\n  try {\r\n    const response = await api.get('/products/categories');\r\n    const clothCategories = {\r\n      \"electronics\": \"Beverages\",\r\n      \"jewelery\": \"Desserts\", \r\n      \"men's clothing\": \"Main Course\",\r\n      \"women's clothing\": \"Appetizers\"\r\n    };\r\n    return response.data.map(cat => clothCategories[cat] || cat);\r\n  } catch (error) {\r\n    console.error('Error fetching categories:', error);\r\n    return [\"Main Course\", \"Appetizers\", \"Desserts\", \"Beverages\"];\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,0BAA0B,CAE/C,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,KACX,CAAC,CAAC,CAEF,KAAM,CAAAC,gBAAgB,CAAIC,OAAO,EAAK,CACpC,KAAM,CAAAC,eAAe,CAAG,CACtB,aAAa,CAAE,WAAW,CAC1B,UAAU,CAAE,UAAU,CACtB,gBAAgB,CAAE,aAAa,CAC/B,kBAAkB,CAAE,YACtB,CAAC,CAED,MAAO,CACLC,EAAE,CAAEF,OAAO,CAACE,EAAE,CACdC,KAAK,CAAEH,OAAO,CAACG,KAAK,CACpBC,KAAK,CAAEC,IAAI,CAACC,KAAK,CAACN,OAAO,CAACI,KAAK,CAAG,GAAG,CAAC,CACtCG,WAAW,CAAEP,OAAO,CAACO,WAAW,CAChCC,QAAQ,CAAEP,eAAe,CAACD,OAAO,CAACQ,QAAQ,CAAC,EAAI,aAAa,CAC5DC,KAAK,CAAET,OAAO,CAACS,KAAK,CACpBC,MAAM,CAAEV,OAAO,CAACU,MAClB,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAG,cAAAA,CAAA,CAAsB,IAAf,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5C,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAArB,GAAG,CAACsB,GAAG,CAAC,WAAW,CAAE,CAC1CC,MAAM,CAAE,CAAEN,KAAM,CAClB,CAAC,CAAC,CACF,MAAO,CAAAI,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACrB,gBAAgB,CAAC,CAC5C,CAAE,MAAOsB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,IAAI,CAAAE,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAtB,EAAE,EAAK,CAC5C,GAAI,CACF,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAArB,GAAG,CAACsB,GAAG,cAAAQ,MAAA,CAAcvB,EAAE,CAAE,CAAC,CACjD,MAAO,CAAAH,gBAAgB,CAACiB,QAAQ,CAACG,IAAI,CAAC,CACxC,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,IAAI,CAAAE,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,eAAe,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAArB,GAAG,CAACsB,GAAG,CAAC,sBAAsB,CAAC,CACtD,KAAM,CAAAhB,eAAe,CAAG,CACtB,aAAa,CAAE,WAAW,CAC1B,UAAU,CAAE,UAAU,CACtB,gBAAgB,CAAE,aAAa,CAC/B,kBAAkB,CAAE,YACtB,CAAC,CACD,MAAO,CAAAe,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACO,GAAG,EAAI1B,eAAe,CAAC0B,GAAG,CAAC,EAAIA,GAAG,CAAC,CAC9D,CAAE,MAAON,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,CAAC,aAAa,CAAE,YAAY,CAAE,UAAU,CAAE,WAAW,CAAC,CAC/D,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}