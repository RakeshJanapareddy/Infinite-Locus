{"ast":null,"code":"var _jsxFileName = \"G:\\\\i\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        return {\n          ...state,\n          items: state.items.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + action.payload.quantity\n          } : item)\n        };\n      }\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        items: state.items.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item).filter(item => item.quantity > 0)\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: []\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: []\n  });\n  const addToCart = (product, quantity = 1) => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: {\n        id: product.id,\n        title: product.title,\n        price: product.price,\n        image: product.image,\n        quantity: quantity\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: productId\n    });\n  };\n  const updateQuantity = (productId, quantity) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        id: productId,\n        quantity: quantity\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const getTotalItems = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getTotalPrice = () => {\n    return state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const value = {\n    items: state.items,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalItems,\n    getTotalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ryyn6h6ys/l0a2Vc3WztPl0+gA4=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","existingItem","items","find","item","id","payload","map","quantity","filter","CartProvider","children","_s","dispatch","addToCart","product","title","price","image","removeFromCart","productId","updateQuantity","clearCart","getTotalItems","reduce","total","getTotalPrice","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["G:/i/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      const existingItem = state.items.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          items: state.items.map(item =>\r\n            item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + action.payload.quantity }\r\n              : item\r\n          )\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      };\r\n\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload)\r\n      };\r\n\r\n    case 'UPDATE_QUANTITY':\r\n      return {\r\n        ...state,\r\n        items: state.items.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        ).filter(item => item.quantity > 0)\r\n      };\r\n\r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        items: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, {\r\n    items: []\r\n  });\r\n\r\n  const addToCart = (product, quantity = 1) => {\r\n    dispatch({\r\n      type: 'ADD_TO_CART',\r\n      payload: {\r\n        id: product.id,\r\n        title: product.title,\r\n        price: product.price,\r\n        image: product.image,\r\n        quantity: quantity\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    dispatch({\r\n      type: 'REMOVE_FROM_CART',\r\n      payload: productId\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    dispatch({\r\n      type: 'UPDATE_QUANTITY',\r\n      payload: {\r\n        id: productId,\r\n        quantity: quantity\r\n      }\r\n    });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch({\r\n      type: 'CLEAR_CART'\r\n    });\r\n  };\r\n\r\n  const getTotalItems = () => {\r\n    return state.items.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  const value = {\r\n    items: state.items,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalItems,\r\n    getTotalPrice\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}